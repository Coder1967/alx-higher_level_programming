tests for `7-base_geometry` module(assumed the first argument will always be a string)
======================================================================================

importing module class BaseGeometry module:
	>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

creating an instance of the class `BaseGeometry`
>>> bg = BaseGeometry()

passing a negative number
>>> bg.integer_validator("height", -175)
Traceback (most recent call last):
   ...
ValueError: height must be greater than 0

passing a non integer
>>> bg.integer_validator("speed", "45km/hr")
Traceback (most recent call last):
  ...
TypeError: speed must be an integer

passing zero
>>> bg.integer_validator("height", 0)
Traceback (most recent call last):
   ...
ValueError: height must be greater than 0

passing a positive integer greater than zero
>>> bg.integer_validator("mass", 71)

passing bool as argument
>>> bg.integer_validator("fast", True)
Traceback (most recent call last):
  ...
TypeError: fast must be an integer

passing None
>>> bg.integer_validator("paste", None)
Traceback (most recent call last):
  ...
TypeError: paste must be an integer

passing a list
>>> bg.integer_validator("pasta", [5, 76])
Traceback (most recent call last):
  ...
TypeError: pasta must be an integer
